#!/bin/bash



# eemigrate Log file location
MIGRATELOG=/var/log/easyengine/eemigrate.log

if [ ! -f $MIGRATELOG ]
then
	sudo touch $MIGRATELOG
	sudo chmod 666 $MIGRATELOG
fi

# Get Local Domain Name
MIGLOCALINFO()
{
	# Check IF Local Added in Command
	read -p " Enter Local Domain Name: " MIGLOCALDOMAIN

	while [[ "$MIGLOCALDOMAIN" == "" ]]
	do
		read -p " Enter Local Domain Name: " MIGLOCALDOMAIN
	done
}

# Get Remote Domain Name, Username, Password, Domain, Port
MIGREMOTEINFO()
{
	# Check IF Remote Added in Command
	read -p " Enter Remote Domain Name: " MIGREMOTEDOMAIN

	while [[ "$MIGREMOTEDOMAIN" == "" ]]
	do
		read -p " Enter Remote Domain Name: " MIGREMOTEDOMAIN
	done


	# Enter Destination Username
	read -p " Enter Usernames [www-data]: " MIGREMOTEUSER

	# If Enter Is Pressed, Then Destination User = www-data
	if [[ $MIGREMOTEUSER = "" ]]
	then
		MIGREMOTEUSER=www-data
	fi

	# Enter Destination Domain OR IP Address
	read -p " Enter Destination IP / DOMAIN: " MIGREMOTEIP

	# Check if Domain OR IP Address is empty
	while [[ "$MIGREMOTEIP" == "" ]]
	do
		read -p " Enter Destination IP / DOMAIN: " MIGREMOTEIP
	done

	# Enter Destination ssh Password
	stty -echo
	read -p " Enter The Destination Password: " MIGREMOTEPASS
	stty echo
	echo

	# Check if Destination ssh Password is Empty
	while [[ "$MIGREMOTEPASS" == "" ]]
	do
		stty -echo
		read -p " Enter The Destination Password: " MIGREMOTEPASS
		stty echo
		echo
	done

	echo "$MIGREMOTEPASS" > /tmp/pass_"$MIGREMOTEUSER"_"$MIGREMOTEIP"

	# Enter Destination Port
	read -p " Enter Destination Port [22]: " MIGREMOTEPORT

	# If Enter Is Pressed, Then Destination Port = 22
	if [[ $MIGREMOTEPORT = "" ]]
	then
		MIGREMOTEPORT=22
	fi
}

# EasyEngine Domain Migration
if [ "$1" = "push" ]
then

	# eemigrate push local.com remote.com

	if [[ -z "$2" ]]
	then
		MIGLOCALINFO
	fi

	if [[ -z "$3" ]]
	then
		MIGREMOTEINFO
	fi

elif [ "$1" = "pull" ]
then

	# eemigrate pull remote.com local.com

	if [[ -z "$2" ]]
	then
		MIGREMOTEINFO
	fi

	if [[ -z "$3" ]]
	then
		MIGLOCALINFO
	fi
fi


# Ask for Import Database from Source to Destination
read -p " Import Database from $MIGLOCALDOMAIN to $MIGREMOTEDOMAIN (y/n) [n]: " MIGDBIMPORT

# If Enter Is Pressed, Then Database Import = y
if [[ $MIGDBIMPORT = "" ]]
then
	MIGDBIMPORT=n
fi


# MySQL Export Function
EEMIGMYSQLEXPORT()
{
	echo $MIGLOCALDOMAIN
	

	# Get wp-config.php file path in MIGEXPORTCONFIG
	if [ "$1" = "push" ]
	then

		MIGEXPORTCONFIG=/var/www/$MIGLOCALDOMAIN/wp-config.php

		# Check If wp-config.php file exist or not
		if [ -f $MIGEXPORTCONFIG ]
		then
			MIGDBEXPORT=y
		elif [ -f /var/www/$MIGLOCALDOMAIN/htdocs/wp-config.php ]
		then
			MIGDBEXPORT=y
			MIGEXPORTCONFIG=/var/www/$MIGLOCALDOMAIN/htdocs/wp-config.php
		else
			MIGDBEXPORT=n
		fi
		

	elif [ "$1" = "pull" ]
	then

		# Lets Import MySQL
		rsync -dmavzh --password-file=/tmp/pass_"$MIGREMOTEUSER"_"$MIGREMOTEIP" --include "/*" --include "wp-config.php" --exclude "*" $MIGREMOTEUSER@$MIGREMOTEIP:/var/www/$MIGREMOTEDOMAIN /tmp/ || SyncError "Unable To Fetch wp-config.php From $MIGREMOTEDOMAIN"
		
		# Rename wp-config file name to avoid conflict
		if [ -d /tmp/htdocs ]
		then
			mv /tmp/htdocs/wp-config.php /tmp/$MIGREMOTEDOMAIN-wp-config.php
			rm -rf /tmp/htdocs
		else
			mv /tmp/wp-config.php /tmp/$MIGREMOTEDOMAIN-wp-config.php
		fi

		MIGEXPORTCONFIG=/tmp/$MIGREMOTEDOMAIN-wp-config.php

		# Check If wp-config.php file exist or not
		if [ -f $MIGEXPORTCONFIG ]
		then
			MIGDBEXPORT=y
		else
			MIGDBEXPORT=n
		fi

	fi 

	if [ "$MIGDBEXPORT" == "y" ]
	then

		# MySQL Informatiom from wp-config.php file
		MIGSRCDBNAME=$(grep DB_NAME $MIGEXPORTCONFIG | cut -d"'" -f4)
		MIGSRCDBUSER=$(grep DB_USER $MIGEXPORTCONFIG | cut -d"'" -f4)
		MIGSRCDBPASS=$(grep DB_PASS $MIGEXPORTCONFIG | cut -d"'" -f4)

		# Take MySQL Dump from Source
		echo -e "\033[34m \n Taking MySQL Dump, Please Wait... \n \e[0m"
		
		if [ "$1" = "push" ]
		then

			mysqldump --max_allowed_packet=512M -u $MIGSRCDBUSER -p$MIGSRCDBPASS $MIGSRCDBNAME > /var/www/$MIGLOCALDOMAIN/$MIGSRCDBNAME.sql || SyncError "Unable To Dump MySQL For $MIGSRCDBNAME"

		elif [ "$1" = "pull" ]
		then

			ssh $MIGREMOTEUSER@$MIGREMOTEIP -p $MIGREMOTEPORT "mysqldump --max_allowed_packet=512M -u $MIGSRCDBUSER -p$MIGSRCDBPASS $MIGSRCDBNAME > /var/www/$MIGLOCALDOMAIN/$MIGSRCDBNAME.sql"
			rsync -dmavzh --password-file=/tmp/pass_"$MIGREMOTEUSER"_"$MIGREMOTEIP" --include "/*" --include "wp-config.php" --exclude "*" $MIGREMOTEUSER@$MIGREMOTEIP:/var/www/$MIGREMOTEDOMAIN/wp-config.php /tmp/ || SyncError "Unable To Fetch wp-config.php From $MIGREMOTEDOMAIN"

		fi
	fi

} # End of EEMIGMYSQLEXPORT Function



























if [ "$1" = "push" ]
then
	EEMIGMYSQLEXPORT "$1" "Hello" "World"
fi

exit;
# MySQL Import Function
EEMIGMYSQLIMPORT()
{
	if [ "$1" = "push" ]
	then

		ssh $MIGREMOTEUSER@$MIGREMOTEIP -p $MIGREMOTEPORT "mysql -u $MIGDESTDBUSER -p$MIGDESTDBPASS $MIGDESTDBNAME < /var/www/$MIGREMOTEDOMAIN/$MIGSRCDBNAME.sql" || SyncError "Unable To Import MySQL On $MIGREMOTEDOMAIN"

	elif [ "$1" = "pull" ]
	then

		mysql -u $MIGDESTDBUSER -p$MIGDESTDBPASS $MIGDESTDBNAME < /var/www/$MIGREMOTEDOMAIN/$MIGSRCDBNAME.sql || SyncError "Unable To Import MySQL On $MIGREMOTEDOMAIN"

	fi
}

if [ "$1" = "push" ]
then
	EEMIGMYSQLIMPORT "$1" "Hello" "World"
fi














if [ "$1" = "push" ]
then

		

		if [ "$MIGDBEXPORT" == "y" ]
		then

			EEMIGMYSQLEXPORT "$1"

			# Get Destination Database Name, Username and Password
			MIGDESTDBNAME=$(grep DB_NAME /tmp/$MIGREMOTEDOMAIN-wp-config.php | cut -d"'" -f4)
			MIGDESTDBUSER=$(grep DB_USER /tmp/$MIGREMOTEDOMAIN-wp-config.php | cut -d"'" -f4)
			MIGDESTDBPASS=$(grep DB_PASS /tmp/$MIGREMOTEDOMAIN-wp-config.php | cut -d"'" -f4)
			echo -e "\n Destination Domain = $MIGREMOTEDOMAIN \n Destination DB Name = $MIGDESTDBNAME \n Destination MySQL User = $MIGDESTDBUSER \n Destination MySQL Password = $MIGDESTDBPASS \n" | tee -ai $MIGRATELOG
		fi


		read -p " Are You Sure To migrate $MIGLOCALDOMAIN To $MIGREMOTEDOMAIN (y/n) [y]: " MIGPERMISSION

		# If Enter Is Pressed, Then User Sure for Migration = y
		if [[ $MIGPERMISSION = "" ]]
		then
			MIGPERMISSION=y
		fi

		if [ "$MIGPERMISSION" == "y" ]
		then
			echo -e "\033[34m Sync $MIGLOCALDOMAIN To $MIGREMOTEDOMAIN, Please Wait...  \e[0m"
			
			if [ "$MIGDBEXPORT" == "y" ]
			then
				# Sync Local webroot with Remote server
				rsync -avzh --password-file=/tmp/pass_"$MIGREMOTEUSER"_"$MIGREMOTEIP" --exclude="wp-config.php" /var/www/$MIGLOCALDOMAIN/htdocs /var/www/$MIGLOCALDOMAIN/backup/$MIGSRCDBNAME.sql $MIGREMOTEUSER@$MIGREMOTEIP:/var/www/$MIGREMOTEDOMAIN/ || SyncError "Unable To Sync $MIGLOCALDOMAIN To $MIGREMOTEDOMAIN"

				if [ "$MIGDBIMPORT" == "y" ]
				then
					echo -e "\033[34m Importing MySQL, Please Wait...  \e[0m"
					ssh $MIGREMOTEUSER@$MIGREMOTEIP -p $MIGREMOTEPORT "mysql -u $MIGDESTDBUSER -p$MIGDESTDBPASS $MIGDESTDBNAME < /var/www/$MIGREMOTEDOMAIN/$MIGSRCDBNAME.sql" || SyncError "Unable To Import MySQL On $MIGREMOTEDOMAIN"
				else
					echo -e "\033[31m User Denied to Import Database from $MIGLOCALDOMAIN to $MIGREMOTEDOMAIN \n \e[0m" | tee -ai $MIGRATELOG
				fi
			else
				rsync -avzh --password-file=/tmp/pass_"$MIGREMOTEUSER"_"$MIGREMOTEIP" --exclude="wp-config.php" /var/www/$MIGLOCALDOMAIN/htdocs $MIGREMOTEUSER@$MIGREMOTEIP:/var/www/$MIGREMOTEDOMAIN/ || SyncError "Unable To Sync $MIGLOCALDOMAIN To $MIGREMOTEDOMAIN"
			fi

			if [ "$MIGDBEXPORT" == "y" ]
			then
				# Add WP_HOME and WP_SITEURL to wp-config.php file
				if ! grep -w -q WP_HOME /tmp/$MIGREMOTEDOMAIN-wp-config.php && ! grep -w -q WP_SITEURL /tmp/$MIGREMOTEDOMAIN-wp-config.php
				then
					ssh $MIGREMOTEUSER@$MIGREMOTEIP -p $MIGREMOTEPORT "echo -e \"\ndefine( 'WP_HOME', 'http://$MIGREMOTEDOMAIN' ); \ndefine( 'WP_SITEURL', 'http://$MIGREMOTEDOMAIN' ); \" >> /var/www/$MIGREMOTEDOMAIN/wp-config.php" || SyncError "Unable To Add WP_HOME and WP_SITEURL in /var/www/$MIGREMOTEDOMAIN/wp-config.php"
					echo -e "Added WP_HOME and WP_SITEURL to /var/www/$MIGREMOTEDOMAIN/wp-config.php"
				fi

				# Display Important Information After Completing migrate Process
				echo -e "\033[34m \nIMPORTANT: Don't Forget To Use Search & Replace Plugin \n \e[0m"

				# Remove Config file from /tmp/ Directory and Database backup file from Destination
				rm -f /tmp/$MIGREMOTEDOMAIN-wp-config.php
			fi
			echo -e "\033[34m \n http://$MIGREMOTEDOMAIN/ Domain Successfully Migrated \n \e[0m"
		else
			# User Denied Messages
			echo
			echo -e "\033[31m User Denied site migration from $MIGLOCALDOMAIN to $MIGREMOTEDOMAIN \e[0m" | tee -ai $MIGRATELOG
		fi

fi